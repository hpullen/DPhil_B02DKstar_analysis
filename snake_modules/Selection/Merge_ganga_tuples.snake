# Functions to get nTuple name
def get_signal_tuple_name(mode, year):
    if (mode == "Kpipipi"):
        if (year == "2012"):
            return "Tuple_Kpipipi"
        else :
            return "Tuple_K3pi"
    elif (mode == "pipipipi"):
        return "Tuple_4pi"
    else: 
        if (year == "2012"):
            return "TupleB0ToD0KPi_D0ToKPi"
        else:
            return "Tuple_" + mode

def get_background_tuple_name(loc, year):
    if (year == "2012" or year == "2011"):
        if (loc.find("lowMass") == -1):
            return "TupleB0ToD0KPi_D0ToKPi"
        else: 
            return "Tuple_Kpi"
    else:
        return "Tuple_Kpi"


# Merge Ganga job outputs into a single, smaller tuple
rule merge_data:
    input:
        "/home/pullen/analysis/B02DKstar/Merge_ganga_tuples/MakeTuple"
    output:
        "/data/lhcb/users/pullen/B02DKstar/data/{bod}/{year}_{mag}/{mode}.root"
    wildcard_constraints:
        bod = "twoBody|fourBody",
        year = "2011|2012|2015|2016",
        mag = "up|down",
        mode = "Kpi|piK|KK|pipi|Kpipipi|piKpipi|pipipipi"
    shell:
        "export ROOTSYS=/cvmfs/lhcb.cern.ch/lib/lcg/releases/LCG_84/ROOT/6.06.02/x86_64-slc6-gcc49-opt;"
        "export LD_LIBRARY_PATH=${{LD_LIBRARY_PATH}}:${{ROOTSYS}}/lib;"
        "export PATH=$PATH:$ROOTSYS/bin;"
        "cd /home/pullen/analysis/B02DKstar/Merge_ganga_tuples/;"
        "./makeTuple.sh {wildcards.year} {wildcards.mode} data {wildcards.bod} "
        "{wildcards.mag} Tuple_{wildcards.mode}/DecayTree"

rule merge_signal_MC:
    input:
        "/data/lhcb/users/pullen/gangadir/job_output/MC/{bod}/{mode}/{year}_{mag}/"
    output:
        "/data/lhcb/users/pullen/B02DKstar/MC/{bod}/{mode}/{year}_{mag}/{mode}.root"
    wildcard_constraints:
        year = "2011|2012|2015|2016",
        mag = "up|down",
        mode = "Kpi|KK|pipi|Kpipipi|pipipipi"
    params:
        tupleName = lambda wildcards: get_signal_tuple_name(wildcards.mode, 
                wildcards.year)
    shell:
        "export ROOTSYS=/cvmfs/lhcb.cern.ch/lib/lcg/releases/LCG_84/ROOT/6.06.02/x86_64-slc6-gcc49-opt;"
        "export LD_LIBRARY_PATH=${{LD_LIBRARY_PATH}}:${{ROOTSYS}}/lib;"
        "export PATH=$PATH:$ROOTSYS/bin;"
        "cd /home/pullen/analysis/B02DKstar/Merge_ganga_tuples/;"
        "./makeTuple.sh {wildcards.year} {wildcards.mode} MC "
        "{wildcards.bod}/{wildcards.mode} {wildcards.mag} "
        "{params.tupleName}/DecayTree"

rule merge_background_MC:
    input: 
        "/data/lhcb/users/pullen/gangadir/job_output/MC/backgrounds/{location}/"
        "{year}_{mag}/"
    output:
        "/data/lhcb/users/pullen/B02DKstar/MC/backgrounds/{location}/{year}_{mag}/"
        "Kpi.root"
    params:
        tupleName = lambda wildcards: get_background_tuple_name(wildcards.location,
                wildcards.year)
    shell:
        "cd /home/pullen/analysis/B02DKstar/Merge_ganga_tuples/;"
        "./makeTuple.sh {wildcards.year} Kpi MC backgrounds/{wildcards.location} "
        "{wildcards.mag} {params.tupleName}/DecayTree"
